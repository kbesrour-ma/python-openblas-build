name: Build Unix

on: [pull_request]

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  build:
    runs-on: ${{ matrix.os }}
    container:
      image: quay.io/pypa/manylinux_2_24_x86_64:latest
    environment: pypi

    strategy:
      fail-fast: false
      matrix:
        python-version: [ 3.8 ]
        os: [ubuntu-latest]

    env:
      ACTIVE_CCACHE: 1
      PY_TEST_TOKEN: ${{ secrets.TEST_PYPI_API_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
            apt-get install -y gfortran cmake ccache libtinfo5

      - name: Compilation cache
        uses: actions/cache@v3
        with:
          path: ~/.ccache
          # We include the commit sha in the cache key, as new cache entries are
          # only created if there is no existing entry for the key yet.
          # GNU make and cmake call the compilers differently. It looks like
          # that causes the cache to mismatch. Keep the ccache for both build
          # tools separate to avoid polluting each other.
          key: ccache-${{ runner.os }}-${{ matrix.build }}-${{ matrix.fortran }}-${{ github.ref }}-${{ github.sha }}
          # Restore a matching ccache cache entry. Prefer same branch and same Fortran compiler.
          restore-keys: |
            ccache-${{ runner.os }}-${{ matrix.build }}-${{ matrix.fortran }}-${{ github.ref }}
            ccache-${{ runner.os }}-${{ matrix.build }}-${{ matrix.fortran }}
            ccache-${{ runner.os }}-${{ matrix.build }}

      - name: Configure ccache
        run: |
          echo "/usr/lib/ccache" >> $GITHUB_PATH
          # Limit the maximum size and switch on compression to avoid exceeding the total disk or cache quota (5 GB).
          test -d ~/.ccache || mkdir -p ~/.ccache
          echo "max_size = 300M" > ~/.ccache/ccache.conf
          echo "compression = true" >> ~/.ccache/ccache.conf
          ccache -s

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install pypa/build
        run: >-
          python -m pip install build twine

      - name: Build a binary wheel and a source tarball
        run: |
          python -m
          build
          --sdist
          --wheel
          --outdir dist/

      - name: Publish distribution ðŸ“¦ to Test PyPI
        run: |
          python3 -m twine upload -u __token__ -p ${{ secrets.TEST_PYPI_API_TOKEN }} --repository testpypi dist/*

      - name: Show ccache status
        continue-on-error: true
        run: ccache -s
