name: Build MAC-OS

on:
  pull_request:
  push:
    branches:
      - master

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  build:
    runs-on: ${{ matrix.os }}
    environment: pypi

    strategy:
      fail-fast: false
      matrix:
        python-version: [ 3.8 ]
        os: [macos-latest]

    env:
      ACTIVE_CCACHE: 1

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Print system information
        run: |
          sysctl -a | grep machdep.cpu

      - name: Install Dependencies
        run: |
          brew reinstall gcc
          brew install coreutils cmake ccache

      - name: Compilation cache
        uses: actions/cache@v3
        with:
          path: ~/.ccache
          # We include the commit sha in the cache key, as new cache entries are
          # only created if there is no existing entry for the key yet.
          # GNU make and cmake call the compilers differently. It looks like
          # that causes the cache to mismatch. Keep the ccache for both build
          # tools separate to avoid polluting each other.
          key: ccache-${{ runner.os }}-${{ matrix.build }}-${{ github.ref }}
          # Restore a matching ccache cache entry. Prefer same branch and same Fortran compiler.
          restore-keys: |
            ccache-${{ runner.os }}-${{ matrix.build }}-${{ github.ref }}
            ccache-${{ runner.os }}-${{ matrix.build }}-${{ matrix.fortran }}
            ccache-${{ runner.os }}-${{ matrix.build }}

      - name: Configure ccache
        run: |
          echo "$(brew --prefix)/opt/ccache/libexec" >> $GITHUB_PATH
          # Limit the maximum size and switch on compression to avoid exceeding the total disk or cache quota (5 GB).
          test -d ~/.ccache || mkdir -p ~/.ccache
          echo "max_size = 300M" > ~/.ccache/ccache.conf
          echo "compression = true" >> ~/.ccache/ccache.conf
          ccache -s

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install pypa/build
        run: |
          python -m pip install build twine cibuildwheel

      - name: Build a binary wheel and a source tarball
        if: github.ref != 'refs/heads/master'
        run: |
          python -m build --sdist --wheel --outdir dist/

      - name: Build wheels
        if: github.ref == 'refs/heads/master'
        uses: pypa/cibuildwheel@v2.12.3

      - name: Publish distribution ðŸ“¦ to Test PyPI
        if: github.ref != 'refs/heads/master'
        run: |
          python -m twine upload -u __token__ -p ${{ secrets.TEST_PYPI_API_TOKEN }} --repository testpypi --skip-existing dist/*

      - name: Publish distribution ðŸ“¦ to PyPI
        if: github.ref == 'refs/heads/master'
        run: |
          python -m twine upload -u __token__ -p ${{ secrets.PYPI_API_TOKEN }} --repository  pypi --skip-existing dist/*

      - name: Show ccache status
        continue-on-error: true
        run: ccache -s
