name: Build Windows

on:
  pull_request:
  push:
    branches:
      - master

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  msys2:
    runs-on: windows-latest
    environment: pypi

    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8]
        msystem: [MINGW64]
        idx: [int64]
        build-type: [Release]
        idx64-flags: [-DBINARY=64 -DINTERFACE64=1]
        target-prefix: [mingw-w64-x86_64]
        fc-pkg: [mingw-w64-x86_64-gcc-fortran]

    defaults:
      run:
        shell: bash

    env:
      CHERE_INVOKING: 1
      ACTIVE_CCACHE: 1

    steps:
      - name: Install build dependencies
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.msystem }}
          update: true
          release: false  # Use pre-installed version
          install: >-
            base-devel
            ${{ matrix.target-prefix }}-cc
            ${{ matrix.fc-pkg }}
            ${{ matrix.target-prefix }}-cmake
            ${{ matrix.target-prefix }}-ninja
            ${{ matrix.target-prefix }}-ccache

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Prepare ccache
        # Get cache location of ccache
        # Create key that is used in action/cache/restore and action/cache/save steps
        id: ccache-prepare
        run: |
          echo "ccachedir=$(cygpath -m $(ccache -k cache_dir))" >> $GITHUB_OUTPUT
          # We include the commit sha in the cache key, as new cache entries are
          # only created if there is no existing entry for the key yet.
          echo "key=ccache-msys2-${{ matrix.msystem }}-${{ matrix.idx }}-${{ matrix.build-type }}-${{ github.ref }}-${{ github.sha }}" >> $GITHUB_OUTPUT

      - name: Restore ccache
        uses: actions/cache/restore@v3
        with:
          path: ${{ steps.ccache-prepare.outputs.ccachedir }}
          key: ${{ steps.ccache-prepare.outputs.key }}
          # Restore a matching ccache cache entry. Prefer same branch.
          restore-keys: |
            ccache-msys2-${{ matrix.msystem }}-${{ matrix.idx }}-${{ matrix.build-type }}-${{ github.ref }}
            ccache-msys2-${{ matrix.msystem }}-${{ matrix.idx }}-${{ matrix.build-type }}

      - name: Configure ccache
        # Limit the maximum size and switch on compression to avoid exceeding the total disk or cache quota.
        run: |
          which ccache
          test -d ${{ steps.ccache-prepare.outputs.ccachedir }} || mkdir -p ${{ steps.ccache-prepare.outputs.ccachedir }}
          echo "max_size = 250M" > ${{ steps.ccache-prepare.outputs.ccachedir }}/ccache.conf
          echo "compression = true" >> ${{ steps.ccache-prepare.outputs.ccachedir }}/ccache.conf
          ccache -p
          ccache -s
          echo $HOME
          cygpath -w $HOME

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade setuptools
        run: |
          python -m pip install setuptools -U
        
      - name: Install pypa/build
        run: |
          python -m pip install build twine cibuildwheel

      - name: Build a binary wheel and a source tarball
        if: github.ref <> 'refs/heads/master'
        run: |
          python -m build --sdist --wheel --outdir dist/

      - name: Build wheels
        if: github.ref == 'refs/heads/master'
        uses: pypa/cibuildwheel@v2.12.3

      - name: Publish distribution ðŸ“¦ to Test PyPI
        if: github.ref <> 'refs/heads/master'
        run: |
          python -m twine upload -u __token__ -p ${{ secrets.TEST_PYPI_API_TOKEN }} --repository --skip-existing testpypi dist/*

      - name: Publish distribution ðŸ“¦ to PyPI
        if: github.ref == 'refs/heads/master'
        run: |
          python -m twine upload -u __token__ -p ${{ secrets.PYPI_API_TOKEN }} --repository --skip-existing pypi dist/*

      - name: Show ccache status
        continue-on-error: true
        run: ccache -s

      - name: Save ccache
        # Save the cache after we are done (successfully) building
        uses: actions/cache/save@v3
        with:
          path: ${{ steps.ccache-prepare.outputs.ccachedir }}
          key: ${{ steps.ccache-prepare.outputs.key }}

